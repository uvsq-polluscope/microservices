version: "3"
services:
  preprocessing:
    build: 
      context: ./preprocessing_time_series/
      dockerfile: Dockerfile
    volumes:
      - ./preprocessing_time_series:/code
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - SCHEMA_REGISTRY_CLIENT=http://192.168.33.124:8085
    ports:
      - "8001:80"
    networks:
      - mynetwork
  stopmovedetection:
    build: 
      context: ./stop_move_detection/
      dockerfile: Dockerfile
    volumes:
      - ./stop_move_detection:/code
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - SCHEMA_REGISTRY_CLIENT=http://192.168.33.124:8085
    ports:
      - "8004:80"
    networks:
      - mynetwork
  preprocessinggps:
    build: 
      context: ./preprocessing_gps/
      dockerfile: Dockerfile
    volumes:
      - ./preprocessing_gps:/code
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - SCHEMA_REGISTRY_CLIENT=http://192.168.33.124:8085
    ports:
      - "8002:80"
    networks:
      - mynetwork
  classification:
    build: 
      context: ./classification/
      dockerfile: Dockerfile
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - SCHEMA_REGISTRY_CLIENT=http://192.168.33.124:8085
    volumes:
      - ./classification:/code
    ports:
      - "8000:80"
    networks:
      - mynetwork
  dataloader:
    build: 
      context: ./dataloader/
      dockerfile: Dockerfile
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - SCHEMA_REGISTRY_CLIENT=http://192.168.33.124:8085
      - DATABASE=postgresql://postgres:postgres@192.168.33.124:5435/postgres
    volumes:
      - ./dataloader:/code
    networks:
      - mynetwork
  dataloadergps:
    build: 
      context: ./dataloaderGPS/
      dockerfile: Dockerfile
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - SCHEMA_REGISTRY_CLIENT=http://192.168.33.124:8085
      - DATABASE=postgresql://postgres:postgres@192.168.33.124:5435/postgres
    volumes:
      - ./dataloaderGPS:/code
    networks:
      - mynetwork
  dataloadersmd:
    build: 
      context: ./dataloader_smd/
      dockerfile: Dockerfile
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - SCHEMA_REGISTRY_CLIENT=http://192.168.33.124:8085
      - DATABASE=postgresql://postgres:postgres@192.168.33.124:5435/postgres
    volumes:
      - ./dataloader_smd:/code
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge
    external: 
      name: infrastructure_mynetwork
